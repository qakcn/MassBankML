# Copyright 2023 qakcn
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
## This script do machine learing on data set generated by MassBank2Dataset.  ##
##                                                                            ##
## Author: qakcn                                                              ##
## Email: qakcn@hotmail.com                                                   ##
## Version: 1.0                                                               ##
## Date: 2023-12-01                                                           ##
################################################################################

# PSL imports
import pickle

# Third-party imports
import pandas as pd

# Local imports
from classes import *

input_path = Path("inputs")
intermediate_path = Path("intermediates")
output_path = Path("outputs")

dataset_csi_file = input_path / "dataset.csi.pkl"
dataset_no_csi_file = input_path / "dataset.no_csi.pkl"
element_list_file = input_path / "element.nopd.pkl"

dataset_csi_prepared_file = intermediate_path / "dataset.csi.prepared.pkl"
dataset_no_csi_prepared_file = intermediate_path / "dataset.no_csi.prepared.pkl"



hyperparameters = dict(
    # hidden layer parameters
    hidden_dim=1024,
    gat_heads=4,
    num_layers=3,

    # learning parameters
    batch_size=64,
    num_epochs=3000,
    learning_rate=0.0001,
    weight_decay=1e-4,
)

epoch_save_period = 30

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

TS.register_printer(tqdm.write)
is_dataset_prepared = False

if dataset_csi_prepared_file.is_file() and dataset_no_csi_prepared_file.is_file():
    TS.ip("Reading prepared data sets...")
    dataset_csi = pd.read_pickle(dataset_csi_prepared_file)
    dataset_no_csi = pd.read_pickle(dataset_no_csi_prepared_file)
    is_dataset_prepared = True
    TS.p(TS.green("Done."))

with open(element_list_file, "rb") as f:
    element_list = list(pickle.load(f))
num_features = len(element_list)

if not is_dataset_prepared:
    TS.p("Reading data set files...")
    dataset_csi = pd.read_pickle(dataset_csi_file)
    dataset_no_csi = pd.read_pickle(dataset_no_csi_file)
    TS.p(TS.green("Done."))

    tqdm.pandas(desc="Preparing data set within CSI:FingerID", total = dataset_csi.shape[0], ncols=100)
    dataset_csi = dataset_csi.progress_apply(prepare_row, axis=1, element_list=element_list)

    tqdm.pandas(desc="Preparing data set without CSI:FingerID", total = dataset_no_csi.shape[0], ncols=100)
    dataset_no_csi = dataset_no_csi.progress_apply(prepare_row, axis=1, element_list=element_list)

    TS.ip("Saving prepared data sets...")
    dataset_csi.to_pickle(dataset_csi_prepared_file)
    dataset_no_csi.to_pickle(dataset_no_csi_prepared_file)
    TS.p(TS.green("Done."))

    is_dataset_prepared = True

if is_dataset_prepared:
    dataset_csi = MassbankMLDataset(dataset_csi)
    dataset_no_csi = MassbankMLDataset(dataset_no_csi)
    


